"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require("joi");

var _joi2 = _interopRequireDefault(_joi);

var _httpStatusCodes = require("http-status-codes");

var _invoice = require("../models/invoice.model");

var _invoice2 = _interopRequireDefault(_invoice);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  findAll: function findAll(req, res, next) {
    _invoice2.default.find().then(function (invoices) {
      return res.json(invoices);
    }).catch(function (err) {
      return res.status(_httpStatusCodes.StatusCodes.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  create: function create(req, res, next) {
    var schema = _joi2.default.object({
      item: _joi2.default.string().required(),
      date: _joi2.default.date().required(),
      due: _joi2.default.date().required(),
      qty: _joi2.default.number().integer().required(),
      tax: _joi2.default.number().optional(),
      rate: _joi2.default.number().optional()
    });

    var _schema$validate = schema.validate(req.body),
        error = _schema$validate.error,
        value = _schema$validate.value;

    if (error) {
      return res.status(_httpStatusCodes.StatusCodes.BAD_REQUEST).json(error);
    }

    _invoice2.default.create(value).then(function (invoice) {
      return res.json(invoice);
    }).catch(function (err) {
      return res.status(_httpStatusCodes.StatusCodes.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  findOne: function findOne(req, res, nex) {
    var id = req.params.id;

    _invoice2.default.findById(id).then(function (invoice) {
      if (!invoice) {
        return res.status(_httpStatusCodes.StatusCodes.NOT_FOUND).json({ err: "Could not find any invoice" });
      }

      return res.json(invoice);
    }).catch(function (err) {
      return res.status(_httpStatusCodes.StatusCodes.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  delete: function _delete(req, res, next) {
    var id = req.params.id;

    _invoice2.default.findByIdAndRemove(id).then(function (invoice) {
      if (!invoice) {
        return res.status(_httpStatusCodes.StatusCodes.NOT_FOUND).json({ err: "Could not delete any invoice" });
      }

      return res.json(invoice);
    }).catch(function (err) {
      return res.status(_httpStatusCodes.StatusCodes.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  update: function update(req, res, next) {
    var schema = _joi2.default.object({
      item: _joi2.default.string().optional(),
      date: _joi2.default.date().optional(),
      due: _joi2.default.date().optional(),
      qty: _joi2.default.number().integer().optional(),
      tax: _joi2.default.number().optional(),
      rate: _joi2.default.number().optional()
    });

    var _schema$validate2 = schema.validate(req.body),
        error = _schema$validate2.error,
        value = _schema$validate2.value;

    if (error) {
      return res.status(_httpStatusCodes.StatusCodes.BAD_REQUEST).json(error);
    }

    var id = req.params.id;

    _invoice2.default.findByIdAndUpdate(id, value).then(function (invoice) {
      if (!invoice) {
        return res.status(_httpStatusCodes.StatusCodes.NOT_FOUND).json({ err: "Could not update any invoice" });
      }
      return res.json(invoice);
    }).catch(function (err) {
      return res.status(_httpStatusCodes.StatusCodes.INTERNAL_SERVER_ERROR).json(err);
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,